package com.zjf.demo.commons;import javax.imageio.ImageIO;import java.io.File;import java.io.IOException;import java.net.MalformedURLException;import java.net.URL;import java.util.ArrayList;import java.util.List;import java.util.regex.Matcher;import java.util.regex.Pattern;class HttpUtils {    private static String folder;    private static final Pattern IMG_PATTERN = Pattern.compile("<\\s*IMG\\s+([^>]+)\\s*>");    private static final Pattern URL_PATTERN = Pattern.compile("src\\s*=\\s*\"?(.*?)(\"|>|\\s+)");    static List<String> getImgStr(String context) {        //取出context中的img标签        Matcher matcher = IMG_PATTERN.matcher(context);        List<String> imageList = new ArrayList<>();        while (matcher.find()) {            System.out.println(matcher.group());            imageList.add(matcher.group());        }        //对每个img标签匹配图片地址        return imageList;    }    static String getUrlFromImg(String context) {        Matcher pictureUrl = URL_PATTERN.matcher(context);        if (pictureUrl.find()) {            //这里因为业务需求，返回了第一个，可以根据自身需要返回List<String>            String tempStr = pictureUrl.group().substring(0, pictureUrl.group().length() - 1);            return tempStr.split("\"")[1];        }        return null;    }    public static String downloadImage(String imageUrl) {        String fileName = StringUtils.randomString() + ".pdf";        File file = new File(folder + fileName);        URL url;        try {            if (file.createNewFile()) {                System.out.println("create new file");            }            url = new URL(imageUrl);            ImageIO.write(ImageIO.read(url), fileName, file);            return fileName;        } catch (IOException e) {            e.printStackTrace();        }        return null;    }}