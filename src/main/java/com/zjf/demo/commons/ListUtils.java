package com.zjf.demo.commons;import org.slf4j.Logger;import org.slf4j.LoggerFactory;import java.util.List;import java.util.function.Function;import java.util.function.Predicate;import java.util.stream.Collectors;/** * @author zhaojiafeng */public class ListUtils {    private static final Logger LOGGER = LoggerFactory.getLogger(ListUtils.class);    /**     * @param list      源list     * @param predicate 过滤依据     * @param function  函数表达式     */    private static <T, R> List<R> filterAndMap(List<T> list, Predicate<T> predicate, Function<T, R> function) {        return map(filter(list, predicate), function);    }    /**     * 过滤     *     * @param list      需要过滤的list     * @param predicate 过滤依据     */    private static <T> List<T> filter(List<T> list, Predicate<T> predicate) {        LOGGER.info("list use filter");        return list.stream().filter(predicate).collect(Collectors.toList());    }    /**     * 映射生产新的list     *     * @param list     映射依据的list     * @param function 函数表达式     */    private static <T, R> List<R> map(List<T> list, Function<T, R> function) {        LOGGER.info("list use map");        return list.stream().map(function).collect(Collectors.toList());    }}